import sys

# global configuration file
configfile: "../config/config.yaml"

# run utilities rule to gain access to helper functions
include: "rules/utilities.smk"

# checking for program requirements; analysis will stop if any of reference directory, annotation (RNA-seq only), or sample directory are not provided
if not config['reference']:
    sys.exit('No reference directory provided. Exiting program...')
else:
    ref_dir = '../resources/' + config['reference'] + '/'
    ref = get_resource_file(ref_dir,type='fasta')

if not config['mode']:
    sys.exit("Sample processing mode not specified. Provide either 'RNA' or 'DNA' at command line or in config file under parameter 'mode'. Exiting program...")
else:
    mode = config['mode']

if mode == 'RNA':
    annotation = get_resource_file(ref_dir,type='gtf')

if not config['directory']:
    sys.exit('No fastq file directory provided. Exiting program...')
else:
    sample_dir = '../data/' + config['directory']

# extract basenames for all samples being run in analysis
samples = get_sample_basenames(sample_dir)
exts = get_sample_exts(sample_dir)
# get list of callers used for analysis
callers = get_callers()

# core of the pipeline
if mode == 'RNA':
    aligner = ['star','hisat2']
else:
    aligner = 'bwa'

if mode == 'RNA':
    include: "rules/star.smk"
    include: "rules/hisat2.smk"
elif mode == 'DNA':
    include: "rules/bwa.smk"
else:
    sys.exit("Sample processing mode not compatible with pipeline. Please specify either 'RNA' or 'DNA'.")
include: "rules/preprocess_bams.smk"

if config['apply_bqsr']:
    include: "rules/bqsr.smk"
    
include: "rules/call_variants.smk"
include: "rules/merge.smk"

rule all:
    input:
        expand('../results/{sample}/final_calls/',sample=samples)
