import sys
import pandas as pd

# define rules to be run locally (when submitting to cluster)
localrules: all, GetSampleInfo

# global configuration file
configfile: "../config/config.yaml"

# check whether a file directory was specified for the current run
if not config['data']:
    sys.exit('No fastq file directory provided. Exiting program...')
else:
    sample_dir = '../data/' + config['data']

# run utilities rule to gain access to helper functions
include: "rules/utilities.smk"

# checking for sample reference; analysis will stop if reference directory not specified
if not config['reference']:
    sys.exit('No reference directory provided. Exiting program...')
else:
    ref_dir = '../resources/' + config['reference'] + '/'
    ref = get_resource_file(ref_dir,type='fasta')

# check whether a sample processing mode was specified for current run
if not config['mode']:
    sys.exit("Sample processing mode not specified. Provide either 'RNA' or 'DNA' at command line or in \
config file under parameter 'mode'. Exiting program...")
else:
    mode = config['mode']

# for RNA mode, access the gtf file
if mode == 'RNA' or config['apply_snpeff']:
    annotation = get_resource_file(ref_dir,type='gtf')

# extract sample names for all samples being run in analysis; used for wildcard in rule 'all' below
samples_df = pd.read_csv(config['samples'],sep='\t').set_index('Sample_name')
samples = samples_df.index.tolist()

# get list of callers used for analysis
callers = get_callers()
 
########## Core of the Pipeline ##########

# get aligner(s) based on mode specified
if mode == 'RNA':
    aligner = ['star','hisat2']
else:
    aligner = 'bwa'

# perform read mapping
if mode == 'RNA':
    include: "rules/RNA_indexing.smk"
    include: "rules/RNA_mapping.smk"
elif mode == 'DNA':
    include: "rules/DNA_mapping.smk"
else:
    sys.exit("Sample processing mode not compatible with pipeline. Please specify either 'RNA' or 'DNA'. Exiting...")

# preprocess BAM files
include: "rules/preprocess_bams.smk"

# apply base quality score recalibration if set in config file
if config['apply_bqsr']:
    include: "rules/bqsr.smk"

# call and filter variants
include: "rules/call_germline.smk"
include: "rules/merge_variants.smk"

# if set, apply variant annotation using SnpEff and set new pipeline target
if config['apply_snpeff']:
    include: "rules/variant_annotation.smk"
    # target rule
    rule all:
        input:
            expand('../results/{sample}/final_calls/final_calls_{sample}_snps_snpeff.vcf',sample=samples)
else:
    # target rule
    rule all:
        input:
            expand('../results/{sample}/final_calls/final_calls_{sample}_snps.vcf',sample=samples)

# if set, apply ploidy evaluation analysis and set new pipeline target
if config['check_ploidy']:
    include: "rules/ploidy_check.smk"
    # target rule
    rule all:
        input:
            expand('../results/{sample}/final_calls/ploidy_check_report.html',sample=samples)
